<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd">
						
	<bean id="schedulerBean"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="autoStartup" value="true" />
		
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">10</prop>
				<!-- min 1, max 10 -->
				<prop key="org.quartz.threadPool.threadPriority">5</prop>
				<prop key="org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread">true</prop>
				
				<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
				<prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
				
				<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</prop>
				
				<!-- triggerlarin calisma saatlerinden kac milisaniye once calistirilabilecegi (default 0)
					 cok fazla trigger olmasi durumunda performansi artiriyor.
				 -->
				<prop key="org.quartz.scheduler.batchTriggerAcquisitionFireAheadTimeWindow">5000</prop>
				<!-- bir job misfired sayilmadan once gececek sure, milisaniye cinsinden -->
				<prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
			</props>
		</property>
		<property name="dataSource" ref="myDataSource" />
	</bean>
	
	<bean id="quartzScheduler" class="com.genie.scheduling.QuartzScheduler">
		<constructor-arg ref="schedulerBean" />
	</bean>
	 
</beans>