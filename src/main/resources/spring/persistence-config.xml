<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true" xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:security="http://www.springframework.org/schema/security" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
			http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- The  <tx:annotation-driven> configuration element tells Spring to examine all -->
	<!-- beans in the application context and to look for beans that are annotated with -->
	<!-- @Transactional, either at the class level or at the method level.  -->
	
	<!-- 	Tip (from: http://static.springsource.org/spring/docs/3.1.x/reference/transaction.html) -->

	<!-- 	You can omit the transaction-manager attribute in the <tx:annotation-driven/> tag if the bean name of -->
	<!-- 	the PlatformTransactionManager that you want to wire in has the name transactionManager. -->
	<!-- 	If the PlatformTransactionManager bean that you want to dependency-inject has any other name, -->
	<!-- 	then you have to use the transaction-manager attribute explicitly, as in the preceding example. -->
	
	<tx:annotation-driven transaction-manager="transactionManager"  />

	<!-- ===================== -->
	<!--  DATABASE INFORMATION -->
	<!-- ===================== -->

	
	<bean id="myDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		p:driverClassName="${jdbc.driver}" p:url="${jdbc.url}"
		p:username="${jdbc.user}" p:password="${jdbc.password}" />
		
<!-- 	<import resource="classpath*:spring/persistence-config-files/${persistence.datasource.config.file}" />	 -->
				
<!--     <bean id="jpaAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"> -->

<!-- 		<description>Allow spring to configure hibernate specific settings</description> -->
<!-- 		<property name="database" value="ORACLE" /> -->
<!-- 		<property name="showSql" value="false" /> -->
<!-- 		<property name="generateDdl" value="false" /> -->
<!-- 		<property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect" />                 -->
<!-- 	</bean> -->

<!-- 	<bean name="auditInterceptor" class="com.genie.persistence.GenieInterceptor" /> -->

	<bean id="myEmf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

		<property name="persistenceUnitName" value="geniePU" />
		<property name="dataSource" ref="myDataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		
		<property name="persistenceXmlLocation" value="classpath:META-INF/genie-persistence.xml" />
		
		<property name="persistenceProvider">
            <bean class="com.genie.persistence.ConfigurableHibernatePersistence">
                <property name="interceptor">
                    <bean class="com.genie.persistence.GenieInterceptor">
                    </bean>
                </property>
            </bean>
        </property>
        
		<property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
        
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl}</prop>
		        <prop key="hibernate.connection.CharSet">${hibernate.connection.charSet}</prop>
		        <prop key="hibernate.connection.characterEncoding">${hibernate.connection.charSet}</prop>
		        <prop key="hibernate.connection.useUnicode">${hibernate.connection.useUnicode}</prop>
				<prop key="org.hibernate.envers.audit_table_prefix">${hibernate.envers.prefix}</prop>
				<prop key="org.hibernate.envers.audit_table_suffix">${hibernate.envers.suffix}</prop>
				<prop key="org.hibernate.envers.store_data_at_delete">${hibernate.envers.storeDataAtDelete}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
			</props>
		</property>	
		
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">

		<property name="entityManagerFactory" ref="myEmf" />
<!--         <property name="entityInterceptor" ref="auditInterceptor"/> -->
        
		<qualifier value="myTransactionManager" />

	</bean>
</beans>